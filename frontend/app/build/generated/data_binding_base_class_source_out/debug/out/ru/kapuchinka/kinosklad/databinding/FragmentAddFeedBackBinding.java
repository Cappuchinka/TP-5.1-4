// Generated by view binder compiler. Do not edit!
package ru.kapuchinka.kinosklad.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.kapuchinka.kinosklad.R;

public final class FragmentAddFeedBackBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonPublicFeedback;

  @NonNull
  public final EditText feedbackText;

  @NonNull
  public final EditText feedbackTitle;

  @NonNull
  public final ConstraintLayout frameLayout5;

  private FragmentAddFeedBackBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonPublicFeedback, @NonNull EditText feedbackText,
      @NonNull EditText feedbackTitle, @NonNull ConstraintLayout frameLayout5) {
    this.rootView = rootView;
    this.buttonPublicFeedback = buttonPublicFeedback;
    this.feedbackText = feedbackText;
    this.feedbackTitle = feedbackTitle;
    this.frameLayout5 = frameLayout5;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddFeedBackBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddFeedBackBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_feed_back, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddFeedBackBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_public_feedback;
      Button buttonPublicFeedback = ViewBindings.findChildViewById(rootView, id);
      if (buttonPublicFeedback == null) {
        break missingId;
      }

      id = R.id.feedback_text;
      EditText feedbackText = ViewBindings.findChildViewById(rootView, id);
      if (feedbackText == null) {
        break missingId;
      }

      id = R.id.feedback_title;
      EditText feedbackTitle = ViewBindings.findChildViewById(rootView, id);
      if (feedbackTitle == null) {
        break missingId;
      }

      ConstraintLayout frameLayout5 = (ConstraintLayout) rootView;

      return new FragmentAddFeedBackBinding((ConstraintLayout) rootView, buttonPublicFeedback,
          feedbackText, feedbackTitle, frameLayout5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
