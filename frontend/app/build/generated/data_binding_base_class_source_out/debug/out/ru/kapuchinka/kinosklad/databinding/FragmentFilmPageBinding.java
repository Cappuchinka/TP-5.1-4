// Generated by view binder compiler. Do not edit!
package ru.kapuchinka.kinosklad.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.kapuchinka.kinosklad.R;

public final class FragmentFilmPageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton buttonAddFavorite;

  @NonNull
  public final Button buttonFeedback;

  @NonNull
  public final LinearLayout filmInfo;

  @NonNull
  public final ConstraintLayout frameLayout4;

  @NonNull
  public final LinearLayout linLayoutPageFilm;

  @NonNull
  public final TextView pageFilmCountryYear;

  @NonNull
  public final TextView pageFilmDescription;

  @NonNull
  public final TextView pageFilmName;

  @NonNull
  public final ImageView pageFilmPoster;

  @NonNull
  public final RecyclerView rVFeedbacks;

  @NonNull
  public final ScrollView scrollFilmPage;

  private FragmentFilmPageBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton buttonAddFavorite, @NonNull Button buttonFeedback,
      @NonNull LinearLayout filmInfo, @NonNull ConstraintLayout frameLayout4,
      @NonNull LinearLayout linLayoutPageFilm, @NonNull TextView pageFilmCountryYear,
      @NonNull TextView pageFilmDescription, @NonNull TextView pageFilmName,
      @NonNull ImageView pageFilmPoster, @NonNull RecyclerView rVFeedbacks,
      @NonNull ScrollView scrollFilmPage) {
    this.rootView = rootView;
    this.buttonAddFavorite = buttonAddFavorite;
    this.buttonFeedback = buttonFeedback;
    this.filmInfo = filmInfo;
    this.frameLayout4 = frameLayout4;
    this.linLayoutPageFilm = linLayoutPageFilm;
    this.pageFilmCountryYear = pageFilmCountryYear;
    this.pageFilmDescription = pageFilmDescription;
    this.pageFilmName = pageFilmName;
    this.pageFilmPoster = pageFilmPoster;
    this.rVFeedbacks = rVFeedbacks;
    this.scrollFilmPage = scrollFilmPage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFilmPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFilmPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_film_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFilmPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_add_favorite;
      ImageButton buttonAddFavorite = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddFavorite == null) {
        break missingId;
      }

      id = R.id.button_feedback;
      Button buttonFeedback = ViewBindings.findChildViewById(rootView, id);
      if (buttonFeedback == null) {
        break missingId;
      }

      id = R.id.film_info;
      LinearLayout filmInfo = ViewBindings.findChildViewById(rootView, id);
      if (filmInfo == null) {
        break missingId;
      }

      ConstraintLayout frameLayout4 = (ConstraintLayout) rootView;

      id = R.id.lin_layout_page_film;
      LinearLayout linLayoutPageFilm = ViewBindings.findChildViewById(rootView, id);
      if (linLayoutPageFilm == null) {
        break missingId;
      }

      id = R.id.page_film_country_year;
      TextView pageFilmCountryYear = ViewBindings.findChildViewById(rootView, id);
      if (pageFilmCountryYear == null) {
        break missingId;
      }

      id = R.id.page_film_description;
      TextView pageFilmDescription = ViewBindings.findChildViewById(rootView, id);
      if (pageFilmDescription == null) {
        break missingId;
      }

      id = R.id.page_film_name;
      TextView pageFilmName = ViewBindings.findChildViewById(rootView, id);
      if (pageFilmName == null) {
        break missingId;
      }

      id = R.id.page_film_poster;
      ImageView pageFilmPoster = ViewBindings.findChildViewById(rootView, id);
      if (pageFilmPoster == null) {
        break missingId;
      }

      id = R.id.r_v_feedbacks;
      RecyclerView rVFeedbacks = ViewBindings.findChildViewById(rootView, id);
      if (rVFeedbacks == null) {
        break missingId;
      }

      id = R.id.scroll_film_page;
      ScrollView scrollFilmPage = ViewBindings.findChildViewById(rootView, id);
      if (scrollFilmPage == null) {
        break missingId;
      }

      return new FragmentFilmPageBinding((ConstraintLayout) rootView, buttonAddFavorite,
          buttonFeedback, filmInfo, frameLayout4, linLayoutPageFilm, pageFilmCountryYear,
          pageFilmDescription, pageFilmName, pageFilmPoster, rVFeedbacks, scrollFilmPage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
